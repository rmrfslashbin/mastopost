AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "mastopost"

Parameters:
  ParamAppName:
    Type: String
    Default: mastopost
    Description: Application/stack name.

  ParamRegion:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
    Description: The AWS Region for deployment.

Globals:
  Function:
    Timeout: 60

Resources:
  FunctionMastopostRssCrossPoster:
    Type: AWS::Serverless::Function
    Properties:
      Description: Mastopost RSS Crossposter
      FunctionName: !Sub mastopost-rss-crossposter
      CodeUri: ../bin/mastopost-lambda-rssxpost
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Role: !GetAtt RoleLambdaExecution.Arn

  PolicyMastopostSSMAccess:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "Mastopost-ParameterStoreAccess"
      Roles:
        - !Ref RoleLambdaExecution
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ssm:GetParameter"
              - "ssm:GetParameters"
              - "ssm:GetParametersByPath"
              - "ssm:PutParameter"
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/mastopost/*"

  RoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

Outputs:
  MastopostRSSCrossposter:
    Description: Mastopost RSS Crossposter function ARN
    Value: !Ref FunctionMastopostRssCrossPoster
